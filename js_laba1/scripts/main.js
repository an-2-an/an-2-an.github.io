function loadButton(btn, com, line){
        var myBtn = document.querySelector(btn);
        var comment  =  document.querySelector(com);
        myBtn.onclick = function(){
            var isEmpty = (String(comment.innerHTML).length === 0);
            console.log(isEmpty);
            if(isEmpty) {
                comment.innerHTML = line;
                myBtn.innerHTML = "спрятать комментарий к коду";
            } else {
                comment.innerHTML = "";
                myBtn.innerHTML = "показать комментарий к коду";
            };
        };
};

var myComment1 = "Объявляем переменную х, присваиваем ей значение из диалогового окна <b>promt</b>, которое приводим к числовому типу с помощью функции <b>Number</b>. О видах диалоговых окон (alert, prompt, confirm) можно прочесть <a href = \"https://learn.javascript.ru/uibasic\">здесь</a>. Затем объявляем переменную у и рассчитываем ее значение по формуле. Аналогично - с переменной avg. Далее, используя функцию <b>document.writeln</b>, выводим на страницу значения переменных. Обновляем страницу и проверяем.";
loadButton("#btn1","#comment1",myComment1);

var myComment2 = "Мы объявляем функцию <b>CalculateY</b>, которая пригодится нам для расчета значения у(х) в дальнейшем. Она использует один аргумент  (мы его назвали arg). В теле функции объявляются внутренние переменные  - границы интервалов t<sub>1</sub> и t<sub>2</sub>, которым присваиваются их значения, а также переменная result, которая нам понадобится, чтобы хранить значение у(х), или точнее, у(arg), чтобы потом вернуть его в то место программы, откуда была вызвана  данная функция. Для выбора одной из трех формул расчета (result = 0, result = -1.3, или result = -arg<sup>2</sup>+2), в зависимости от интервала, в который попадает значение arg, используется условная конструкция <b>if - else if - else</b>. После этого возвращается рассчитанное значение result.";
loadButton("#btn2","#comment2",myComment2);

var myComment3 = "Объявляем функцию <b>firstOption</b>, которая будет выполнять первое задание – расчет у(х) по заданному значению х. Внутренняя переменная х получает числовое значение после его ввода в уже знакомом нам  диалоговом окне <b>prompt</b>, а другая внутренняя переменная у получает значение у(х) после вызова функции <b>CalculateY</b> со значением аргумента х. Далее следует вывод данных.";
loadButton("#btn3","#comment3",myComment3);

var myComment4 = "Объявляем функцию <b>secondOption</b> для определения положения точки относительно линии графика нашей зависимости. Координаты точки (внутренние переменные х1 и у1) вводятся через диалоговые окна, далее рассчитывается значение у(х1) с использованием функции <b>calculateY</b> и присваивается внутренней переменной y_graph. Это значение – вторая координата точки графика с первой координатой равной х1. Таким образом, если (y1 - y_graph) – положительное выражение, значит, точка лежит выше линии графика. Соответственно, если эта разность равна нулю, то точка принадлежит линии графика, а если разность отрицательна, то точка лежит ниже линии. Значение данной разности присваивается внутренней переменной delta, и в зависимости от нее внутренняя строковая переменная line получает одно из трех значений – «выше», «принадлежит» или «ниже». Далее происходит объединение значений координат, переменной line и некоторых связующих строковых значений для вывода результирующей фразы на экран. Также, если delta отлична от нуля (а значит, точка не лежит на линии), выводится выражение, содержащее значение delta по модулю, чтобы показать, на сколько единиц отстоит точка от линии графика.";
loadButton("#btn4","#comment4",myComment4);

var myComment5 = "И, наконец, последний фрагмент кода, который задействует  все ранее созданные нами функции.   Оператор <b>confirm</b> выводит диалоговое окно, и возвращает  истину (true) при нажатии кнопки ОК или ложь (false) при нажатии кнопки Отмена(Cancel). Текст в диалоговом окне указан в качестве параметра функции <b>confirm</b>. В нашем случае он будет выводиться в две строки – символ «\\n» выполнит перевод строки. Возвращаемое логическое значение используется в качестве условия логического оператора <b>if-else</b>, соответственно будет выполняться одна из функций - <b>firstOption</b> либо <b>secondOption</b>. ";
loadButton("#btn5","#comment5",myComment5);

var myBtn_prompt = document.querySelector("#btn_prompt");
myBtn_prompt.onclick = function(){
        var temp = prompt("введите что-нибудь и нажмите ОК");
        alert("А это окно alert\nвы ввели: " + temp);
    };

var myBtn_confirm = document.querySelector("#btn_confirm");
myBtn_confirm.onclick = function(){
        var temp = confirm("ОК или Отмена...");
        alert("ваш выбор: " + temp);
    };